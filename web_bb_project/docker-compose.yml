version: '3'

services:
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/site.conf:/etc/nginx/conf.d/default.conf
      - ./web_bb/app/templates:/usr/share/nginx/html  # HTML-файлы
      - ./web_bb/app/static:/usr/share/nginx/static  # CSS/JS
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - web_bb

  #второй контейнер для сервера mysql создаём просто из образа
  db:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_DATABASE=web_bb
      - MYSQL_USER=docker
      - MYSQL_PASSWORD=123321
      - MYSQL_ROOT_PASSWORD=123321
    volumes:
      - ./mysql:/var/lib/mysql
      - ./web_bb.sql:/docker-entrypoint-initdb.d/web_bb.sql
    networks:
      - web_bb

  #третий контейнер для сервиса phpmyadmin, для управления базой данных, также создаём просто из образа
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8081:80'
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
    depends_on:
      - db
    networks:
      - web_bb

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - nginx
      - phpmyadmin
    restart: on-failure
    environment:
      - DATABASE_URL=mysql+pymysql://root:123321@db:3306/web_bb
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5000
    networks:
      - web_bb

#без оступа как и services начинаеся деректива сети.Для простоты я добавлю указание использования сети по умолчанию, называемой bridge. 

networks:
  web_bb:
    driver: bridge
